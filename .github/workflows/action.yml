name: Makefile CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"

jobs:
  lint:
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Lint Terraform
        uses: actionshub/terraform-lint@main

  plan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/master')
    needs: lint
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      region: us-east-1
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init -no-color
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
      - name: Comment PR with Terraform Plan
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const output = `Terraform Plan:\n\`\`\`${{ steps.plan.outputs.stdout }}\`\`\``;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  apply:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      region: us-east-1
    steps:
      - name: Debug Info
        run: |
          echo "github.ref: ${{ github.ref }}"
          echo "github.event_name: ${{ github.event_name }}"
      - name: Check out code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init -no-color
      - name: Terraform Apply
        run: terraform apply -auto-approve -no-color
