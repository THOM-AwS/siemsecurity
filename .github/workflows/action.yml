name: Makefile CI

on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches:
      - "*"
  workflow_run:
    workflows: ["Pull Request Merge"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Lint Terraform
        uses: actionshub/terraform-lint@main

  plan:
    runs-on: ubuntu-latest
    needs: lint
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      region: us-east-1
    steps:
      - uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        run: terraform plan -no-color | tee plan-output.txt
      - name: Set Terraform Plan Output
        run: |
          planOutput=$(cat plan-output.txt)
          echo "TERRAFORM_PLAN=${planOutput}" >> $GITHUB_ENV
          echo "::set-output name=TERRAFORM_PLAN::${planOutput}"
          echo "Terraform Plan:"
          echo "$planOutput"
        shell: bash
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('plan-output.txt', 'utf8');
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Terraform Plan:\n\`\`\`${planOutput}\`\`\``
            })

  apply:
    runs-on: ubuntu-latest
    if: github.event.workflow == 'Pull Request Merge'
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      region: us-east-1
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        run: terraform apply -auto-approve
